1 . returnIndexForTarget:

--------------------------------------------------------------------------------
2. addTwoNum:

/**
 * Definition for singly-linked list.
 * function ListNode(val, next) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.next = (next===undefined ? null : next)
 * }
 */
/**
 * @param {ListNode} l1
 * @param {ListNode} l2
 * @return {ListNode}
 */
var addTwoNumbers = function(l1, l2) {
//     let list1 = [2,4,3];

// let list2 = [5,6,4];

//"Reversed list"
// console.log(list1.reverse());
// console.log(list2.reverse());

let arrayList1 = convertLinkedListToArray(l1);
let arrayList2 = convertLinkedListToArray(l2);

let newlist1 = arrayList1.reverse();
let newlist2 = arrayList2.reverse();

//"Converting reversed array as an value and storing it as a string"
let numl1 = newlist1.join('');
// console.log(numl1);
let intnum1 = parseInt(numl1);

let numl2 = newlist2.join('');
// console.log(numl2);
let intnum2 = parseInt(numl2);

//"Adding the numbers"
let sum = intnum1 + intnum2;
// console.log(sum);


//"Coverting number to string"
const numToSeparate = sum;
const resultArray = Array.from(String(numToSeparate), Number);
// console.log(resultArray);

//"Reversing the result array"
 return convertArrayToLinkedList(resultArray);
  // return l1;

};

let convertLinkedListToArray = (listNode) => {
  let input = []
  while (listNode.next) {
     input.push(listNode.val);
     listNode = listNode.next;
  }
  input.push(listNode.val)
  console.log(input)
  return input;
}

let convertArrayToLinkedList = (arr) => {

  console.log(arr)
  let linkedListOutput = new ListNode(arr[0], undefined)
  for (i = 1; i < arr.length; i++) {
    linkedListOutput = new ListNode(arr[i], linkedListOutput)
  }
  console.log(linkedListOutput)
  return linkedListOutput;
  // return new ListNode(45, undefined)
  //  return new ListNode(arr[2], undefined)
}
--------------------------------------------------------------------------------
